# -*- coding: utf-8 -*-
"""Data.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1lW-Bni7dxnLGPtZV-ZudsI_CiKbV5QjH
"""

#!pip install pycocotools
import pandas as pd 
import os
from pycocotools.coco import COCO
import skimage.io as io
import matplotlib.pyplot as plt
from pathlib import Path
import csv
import json
import numpy as np

class Data:
  def __init__(self):
    f = open('Data_constructor.txt', 'r')
    content = f.read()
    print(content)
    f.close()
  def visualize(self,task_id,task_name):
      task_id=str(task_id)
      #remove comments when using with gcs bucket
      #ann_path="https://storage.cloud.google.com/tfrecords_and_logs/coco_instances_for_tasks/task_"+task_id+"_instances_default.json"
      #img_path="https://storage.cloud.google.com/medanta_images/Tasks/Task_"+task_id+"_readscan_309im_18patient/"+task_name
      ann_path="Testing/coco_instances_for_tasks_task_"+task_id+"_instances_default.json"
      img_path="Testing/Tasks_Task_"+task_id+"_readscan_309im_18patient_"+task_name
      with open(ann_path) as json_file:
        data = json.load(json_file)
      ann_dict=data['annotations']
      img_dict=data['images']
      d={}
      for dict in img_dict:
        if dict['file_name']==task_name:
          d=dict
          break
        else:
          continue
      coco=COCO(ann_path)
      annotations=coco.loadAnns(d['id'])
    
      import cv2 as cv
      from matplotlib import pyplot as plt
      img = cv.imread(img_path) 
      fig = plt.figure(figsize=(10, 7))
      fig.add_subplot(1,2,1)
      plt.imshow(img)
      fig.add_subplot(1,2,2)
      plt.imshow(img)
      coco.showAnns(annotations, draw_bbox=False)
      return 
  def analysis(self, task_id):
    task_id=str(task_id)
    #remove comment when using with gcs bucket
    #path="https://storage.cloud.google.com/tfrecords_and_logs/coco_instances_for_tasks/task_"+task_id+"_instances_default.json"
    #path for trial of pipeline remove when using gcs bucket
    path="Testing/coco_instances_for_tasks_task_"+task_id+"_instances_default.json"
    with open(path) as json_file:
      data = json.load(json_file)
    temp='category_id'
    ann_dict=data['annotations']
    cat_ids=list()
    for ann in ann_dict:
      cat_ids.append(ann['category_id'])
      
    values, counts = np.unique(cat_ids, return_counts=True)
    p=COCO(path)
    categories=p.loadCats(values)
    categories_name=list()
    for cat in categories:
      categories_name.append(cat['name'])
    c=[categories_name]
    counts=counts.tolist()
    cs=[counts]
    wf=np.concatenate((c,cs),axis=0)
      
    # opening the csv file in 'w+' mode
    file = open('Data_analysis.csv', 'w+', newline ='')
    fields=[['Category_name','count']] 
    # writing the data into the file
    with file:  
      write = csv.writer(file)
      write.writerows(fields)
      write.writerows(np.transpose(wf))
    print(pd.read_csv('Data_analysis.csv'))
    return
